var documenterSearchIndex = {"docs":
[{"location":"data_assimilation/#Data-assimilation-1","page":"Data Assimilation","title":"Data assimilation","text":"","category":"section"},{"location":"data_assimilation/#","page":"Data Assimilation","title":"Data Assimilation","text":"Modules = [NPSMC]\nPages   = [\"data_assimilation.jl\"]\nOrder   = [:type, :function]","category":"page"},{"location":"data_assimilation/#NPSMC.DataAssimilation","page":"Data Assimilation","title":"NPSMC.DataAssimilation","text":"DataAssimilation( forecasting, method, np, xt, sigma2)\n\nparameters of the filtering method\n\nmethod :chosen method (:AnEnKF, :AnEnKS, :AnPF)\nN      : number of members (AnEnKF/AnEnKS) or particles (AnPF)\n\n\n\n\n\n","category":"type"},{"location":"examples/time_series/##-Time-Series-1","page":"# Time Series","title":"# Time Series","text":"","category":"section"},{"location":"examples/time_series/#","page":"# Time Series","title":"# Time Series","text":"using NPSMC using Random","category":"page"},{"location":"examples/time_series/#","page":"# Time Series","title":"# Time Series","text":"nt, nv = 10, 3 xt = TimeSeries(nt, nv)","category":"page"},{"location":"examples/time_series/#","page":"# Time Series","title":"# Time Series","text":"time = collect(0:10.0) values = [rand(nv) for i = 1:nt] yo = TimeSeries(time, values)","category":"page"},{"location":"examples/time_series/#","page":"# Time Series","title":"# Time Series","text":"println(typeof(yo.t), typeof(yo.u))","category":"page"},{"location":"model_forecasting/#Model-forecasting-1","page":"Model forecasting","title":"Model forecasting","text":"","category":"section"},{"location":"model_forecasting/#","page":"Model forecasting","title":"Model forecasting","text":"Modules = [NPSMC]\nPages   = [\"model_forecasting.jl\"]","category":"page"},{"location":"model_forecasting/#NPSMC.StateSpaceModel-Tuple{Array{Float64,2}}","page":"Model forecasting","title":"NPSMC.StateSpaceModel","text":"Apply the dynamical models to generate numerical forecasts.\n\n\n\n\n\n","category":"method"},{"location":"particle_filters/#Particle-filters-1","page":"Particle filters","title":"Particle filters","text":"","category":"section"},{"location":"particle_filters/#","page":"Particle filters","title":"Particle filters","text":"Modules = [NPSMC]\nPages   = [\"particle_filters.jl\"]","category":"page"},{"location":"particle_filters/#NPSMC.DataAssimilation-Tuple{TimeSeries,PF}","page":"Particle filters","title":"NPSMC.DataAssimilation","text":"data_assimilation( yo, da, PF(100) )\n\nApply particle filters data assimilation technics using  model forecasting or analog forecasting. \n\n\n\n\n\n","category":"method"},{"location":"models/#Models-1","page":"Models","title":"Models","text":"","category":"section"},{"location":"models/#","page":"Models","title":"Models","text":"Modules = [NPSMC]\nPages   = [\"models.jl\"]","category":"page"},{"location":"models/#NPSMC.lorenz63-NTuple{4,Any}","page":"Models","title":"NPSMC.lorenz63","text":"lorenz63(du, u, p, t)\n\nLorenz-63 dynamical model \n\nbegineqnarray\nu₁(t)  =  p₁ ( u₂(t) - u₁(t)) \nu₂(t)  =  u₁ ( p₂ - u₃(t)) - u₂(t) \nu₃(t)  =  u₂(t)u₁(t) - p₃u₃(t)\nendeqnarray\n\n\n\n\n\n","category":"method"},{"location":"models/#NPSMC.lorenz96-NTuple{4,Any}","page":"Models","title":"NPSMC.lorenz96","text":"lorenz96(S, t, F, J)\n\nLorenz-96 dynamical model \n\n\n\n\n\n","category":"method"},{"location":"models/#NPSMC.sinus-NTuple{4,Any}","page":"Models","title":"NPSMC.sinus","text":"sinus(du, u, p, t)\n\nSinus toy dynamical model \n\nu₁ = p₁ cos(p₁t) \n\n\n\n\n\n","category":"method"},{"location":"examples/model_forecasting/##-Model-Forecasting-1","page":"# Model Forecasting","title":"# Model Forecasting","text":"","category":"section"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"using Plots using NPSMC using DifferentialEquations","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"σ = 10.0 ρ = 28.0 β = 8.0/3","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"dtintegration = 0.01 dtstates      = 1  dtobs         = 8  parameters     = [σ, ρ, β] varobs        = [1] nblooptrain  = 100  nblooptest   = 10 sigma2catalog = 0.0 sigma2obs     = 2.0","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"ssm = StateSpaceModel( lorenz63,                        dtintegration, dtstates, dtobs,                         parameters, varobs,                        nblooptrain, nblooptest,                        sigma2catalog, sigma2obs )","category":"page"},{"location":"examples/model_forecasting/#compute-u0-to-be-in-the-attractor-space-1","page":"# Model Forecasting","title":"compute u0 to be in the attractor space","text":"","category":"section"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"u0    = [8.0;0.0;30.0] tspan = (0.0,5.0) prob  = ODEProblem(ssm.model, u0, tspan, parameters) u0    = last(solve(prob, reltol=1e-6, save_everystep=false))","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"xt, yo, catalog = generate_data( ssm, u0 );","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"plot( xt.t, vcat(xt.u'...)[:,1]) scatter!( yo.t, vcat(yo.u'...)[:,1]; markersize=2)","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"np = 100 dataassimilation = DataAssimilation( ssm, xt) @time x̂ = dataassimilation(yo, PF(np)); println(RMSE(xt, x̂))","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"plot(xt.t, vcat(x̂.u'...)[:,1]) scatter!(xt.t, vcat(xt.u'...)[:,1]; markersize=2) plot!(xt.t, vcat(x̂.u'...)[:,2]) scatter!(xt.t, vcat(xt.u'...)[:,2]; markersize=2) plot!(xt.t, vcat(x̂.u'...)[:,3]) scatter!(xt.t, vcat(xt.u'...)[:,3]; markersize=2)","category":"page"},{"location":"examples/model_forecasting/#","page":"# Model Forecasting","title":"# Model Forecasting","text":"p = plot3d(1, xlim=(-25,25), ylim=(-25,25), zlim=(0,50),             title = \"Lorenz 63\", marker = 2) for x in eachrow(vcat(x̂.u'...))     push!(p, x...) end p","category":"page"},{"location":"ensemble_filters/#Ensemble-filters-1","page":"Ensemble filters","title":"Ensemble filters","text":"","category":"section"},{"location":"ensemble_filters/#","page":"Ensemble filters","title":"Ensemble filters","text":"Modules = [NPSMC]\nPages   = [\"ensemble_filters.jl\"]","category":"page"},{"location":"ensemble_kalman_smoothers/#Ensemble-Kalman-smoothers-1","page":"Ensemble Kalman smoothers","title":"Ensemble Kalman smoothers","text":"","category":"section"},{"location":"ensemble_kalman_smoothers/#","page":"Ensemble Kalman smoothers","title":"Ensemble Kalman smoothers","text":"Modules = [NPSMC]\nPages   = [\"ensemble_kalman_smoothers.jl\"]","category":"page"},{"location":"ensemble_kalman_smoothers/#NPSMC.DataAssimilation-Tuple{TimeSeries,EnKS}","page":"Ensemble Kalman smoothers","title":"NPSMC.DataAssimilation","text":"data_assimilation( yo, da)\n\nApply stochastic and sequential data assimilation technics using  model forecasting or analog forecasting. \n\n\n\n\n\n","category":"method"},{"location":"state_space/#State-Space-1","page":"State Space","title":"State Space","text":"","category":"section"},{"location":"state_space/#","page":"State Space","title":"State Space","text":"Modules = [NPSMC]\nPages   = [\"state_space.jl\"]","category":"page"},{"location":"state_space/#NPSMC.StateSpaceModel","page":"State Space","title":"NPSMC.StateSpaceModel","text":"Space-State model is defined through the following equations\n\nleft\nbeginarrayl\nX_t = m(X_t-1) + eta_t \nY_t = H(X_t) + varepsilon_t\nendarray\nright\n\nX : hidden variables\nY : observed variables\ndt_integrationis the numerical time step used to solve the ODE.\ndt_states is the number of dt_integration between X_t-1 and X_t.\ndt_obs is the number of dt_integration between Y_t-1 and Y_t.\n\n\n\n\n\n","category":"type"},{"location":"state_space/#NPSMC.SSM","page":"State Space","title":"NPSMC.SSM","text":"Generate simulated data from Space State Model\n\nvar_obs            : indices of the observed variables\ndy                 : dimension of the observations\nQ                  : model covariance\nR                  : observation covariance\ndx                 : dimension of the state\ndt_int             : fixed integration time\ndt_model           : chosen number of model time step \nvar_obs            : indices of the observed variables\ndy                 : dimension of the observations\nH                  : first and third variables are observed\nh                  : observation model\njacH               : Jacobian of the observation model(for EKS_EM only)\nQ                  : model covariance\nR                  : observation covariance\n\n\n\n\n\n","category":"type"},{"location":"examples/lorenz63/##-Lorenz-63-1","page":"# Lorenz 63","title":"# Lorenz 63","text":"","category":"section"},{"location":"examples/lorenz63/#-1","page":"# Lorenz 63","title":"","text":"","category":"section"},{"location":"examples/lorenz63/#-2","page":"# Lorenz 63","title":"","text":"","category":"section"},{"location":"examples/lorenz63/#Data-assimilation-are-numerical-methods-used-in-geosciences-to-mix-the-information-of-observations-(noted-as-y)-and-a-dynamical-model-(noted-as-f)-in-order-to-estimate-the-true/hidden-state-of-the-system-(noted-as-x)-at-every-time-step-k.-Usually,-they-are-related-following-a-nonlinear-state-space-model:-1","page":"# Lorenz 63","title":"Data assimilation are numerical methods used in geosciences to mix the information of observations (noted as y) and a dynamical model (noted as f) in order to estimate the true/hidden state of the system (noted as x) at every time step k. Usually, they are related following a nonlinear state-space model:","text":"","category":"section"},{"location":"examples/lorenz63/#img-srchttps://tandeo.files.wordpress.com/2019/02/formule*nnss*model.png-width\"200\"-1","page":"# Lorenz 63","title":"<img src=https://tandeo.files.wordpress.com/2019/02/formulennssmodel.png width=\"200\">","text":"","category":"section"},{"location":"examples/lorenz63/#with-\\eta-and-\\epsilon-some-independant-white-Gaussian-noises-respectively-respresenting-the-model-forecast-error-and-the-error-of-observation.-1","page":"# Lorenz 63","title":"with eta and epsilon some independant white Gaussian noises respectively respresenting the model forecast error and the error of observation.","text":"","category":"section"},{"location":"examples/lorenz63/#-3","page":"# Lorenz 63","title":"","text":"","category":"section"},{"location":"examples/lorenz63/#In-classical-data-assimilation,-we-require-multiple-runs-of-an-explicit-dynamical-model-f-with-possible-severe-limitations-including-the-computational-cost,-the-lack-of-consistency-of-the-model-with-respect-to-the-observed-data-as-well-as-modeling-uncertainties.-Here,-an-alternative-strategy-is-explored-by-developing-a-fully-data-driven-assimilation.-No-explicit-knowledge-of-the-dynamical-model-is-required.-Only-a-representative-catalog-of-trajectories-of-the-system-is-assumed-to-be-available.-Based-on-this-catalog,-the-Analog-Data-Assimilation-(AnDA)-is-introduced-by-combining-machine-learning-with-the-analog-method-(or-nearest-neighbor-search)-and-stochastic-assimilation-techniques-including-Ensemble-Kalman-Filter-and-Smoother-(EnKF,-EnKS)-and-Particle-Filter-(PF).-We-test-the-accuracy-of-the-technic-on-different-chaotic-dynamical-models,-the-Lorenz-63-and-Lorenz-96-systems.-1","page":"# Lorenz 63","title":"In classical data assimilation, we require multiple runs of an explicit dynamical model f with possible severe limitations including the computational cost, the lack of consistency of the model with respect to the observed data as well as modeling uncertainties. Here, an alternative strategy is explored by developing a fully data-driven assimilation. No explicit knowledge of the dynamical model is required. Only a representative catalog of trajectories of the system is assumed to be available. Based on this catalog, the Analog Data Assimilation (AnDA) is introduced by combining machine learning with the analog method (or nearest neighbor search) and stochastic assimilation techniques including Ensemble Kalman Filter and Smoother (EnKF, EnKS) and Particle Filter (PF). We test the accuracy of the technic on different chaotic dynamical models, the Lorenz-63 and Lorenz-96 systems.","text":"","category":"section"},{"location":"examples/lorenz63/#-4","page":"# Lorenz 63","title":"","text":"","category":"section"},{"location":"examples/lorenz63/#This-Julia-program-is-dervied-from-the-Python-library-is-attached-to-the-following-publication:-1","page":"# Lorenz 63","title":"This Julia program is dervied from the Python library is attached to the following publication:","text":"","category":"section"},{"location":"examples/lorenz63/#Lguensat,-R.,-Tandeo,-P.,-Ailliot,-P.,-Pulido,-M.,-and-Fablet,-R.-(2017).-The-Analog-Data-Assimilation.-*Monthly-Weather-Review*,-145(10),-4093-4107.-1","page":"# Lorenz 63","title":"Lguensat, R., Tandeo, P., Ailliot, P., Pulido, M., & Fablet, R. (2017). The Analog Data Assimilation. Monthly Weather Review, 145(10), 4093-4107.","text":"","category":"section"},{"location":"examples/lorenz63/#If-you-use-this-library,-please-do-not-forget-to-cite-this-work.-1","page":"# Lorenz 63","title":"If you use this library, please do not forget to cite this work.","text":"","category":"section"},{"location":"examples/lorenz63/##-USING-PACKAGES-1","page":"# Lorenz 63","title":"# USING PACKAGES","text":"","category":"section"},{"location":"examples/lorenz63/#-5","page":"# Lorenz 63","title":"","text":"","category":"section"},{"location":"examples/lorenz63/#Here,-we-import-the-different-Julia-packages.-In-order-to-use-the-analog-methog-(or-nearest-neighboor-search),-we-need-to-install-the-[\"NPSMC\"-library](https://github.com/npsmc/NPSMC.jl).-1","page":"# Lorenz 63","title":"Here, we import the different Julia packages. In order to use the analog methog (or nearest neighboor search), we need to install the \"NPSMC\" library.","text":"","category":"section"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"using Plots, DifferentialEquations, NPSMC","category":"page"},{"location":"examples/lorenz63/##-TEST-ON-LORENZ-63-1","page":"# Lorenz 63","title":"# TEST ON LORENZ-63","text":"","category":"section"},{"location":"examples/lorenz63/#-6","page":"# Lorenz 63","title":"","text":"","category":"section"},{"location":"examples/lorenz63/#To-begin,-as-dynamical-model-f,-we-use-the-Lorenz-63-chaotic-system.-First,-we-generate-simulated-trajectories-from-this-dynamical-model-and-store-them-into-the-catalog.-Then,-we-use-this-catalog-to-emulate-the-dynamical-model-and-we-apply-the-analog-data-assimilation.-Finally,-we-compare-the-results-of-this-data-driven-approach-to-the-classical-data-assimilation-(using-the-true-Lorenz-63-equations-as-dynamical-model).-1","page":"# Lorenz 63","title":"To begin, as dynamical model f, we use the Lorenz-63 chaotic system. First, we generate simulated trajectories from this dynamical model and store them into the catalog. Then, we use this catalog to emulate the dynamical model and we apply the analog data assimilation. Finally, we compare the results of this data-driven approach to the classical data assimilation (using the true Lorenz-63 equations as dynamical model).","text":"","category":"section"},{"location":"examples/lorenz63/####-GENERATE-SIMULATED-DATA-(LORENZ-63-MODEL)-1","page":"# Lorenz 63","title":"### GENERATE SIMULATED DATA (LORENZ-63 MODEL)","text":"","category":"section"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"σ = 10.0 ρ = 28.0 β = 8.0/3","category":"page"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"dtintegration = 0.01 dtstates      = 1  dtobs         = 8  parameters     = [σ, ρ, β] varobs        = [1] nblooptrain  = 100  nblooptest   = 10 sigma2catalog = 0.0 sigma2obs     = 2.0","category":"page"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"ssm = StateSpaceModel( lorenz63,                        dtintegration, dtstates, dtobs,                         parameters, varobs,                        nblooptrain, nblooptest,                        sigma2catalog, sigma2obs )","category":"page"},{"location":"examples/lorenz63/#compute-u0-to-be-in-the-attractor-space-1","page":"# Lorenz 63","title":"compute u0 to be in the attractor space","text":"","category":"section"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"u0    = [8.0;0.0;30.0] tspan = (0.0,5.0) prob  = ODEProblem(ssm.model, u0, tspan, parameters) u0    = last(solve(prob, reltol=1e-6, save_everystep=false))","category":"page"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"xt, yo, catalog = generate_data( ssm, u0 );","category":"page"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"plot( xt.t, vcat(xt.u'...)[:,1]) scatter!( yo.t, vcat(yo.u'...)[:,1]; markersize=2)","category":"page"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"regression = :local_linear sampling = :gaussian k, np = 100, 500","category":"page"},{"location":"examples/lorenz63/####-CLASSICAL-DATA-ASSIMILATION-(dynamical-model-given-by-the-catalog)-1","page":"# Lorenz 63","title":"### CLASSICAL DATA ASSIMILATION (dynamical model given by the catalog)","text":"","category":"section"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"dataassimilation = DataAssimilation( ssm, xt ) x̂classical = dataassimilation(yo, EnKS(np)) @time RMSE( xt, x̂classical)","category":"page"},{"location":"examples/lorenz63/####-ANALOG-DATA-ASSIMILATION-(dynamical-model-given-by-the-catalog)-1","page":"# Lorenz 63","title":"### ANALOG DATA ASSIMILATION (dynamical model given by the catalog)","text":"","category":"section"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"f  = AnalogForecasting( k, xt, catalog; regression = regression, sampling   = sampling ) dataassimilation = DataAssimilation( f, xt, ssm.sigma2obs ) x̂analog = dataassimilation(yo, EnKS(np)) @time RMSE( xt, x̂_analog)","category":"page"},{"location":"examples/lorenz63/####-COMPARISON-BETWEEN-CLASSICAL-AND-ANALOG-DATA-ASSIMILATION-1","page":"# Lorenz 63","title":"### COMPARISON BETWEEN CLASSICAL AND ANALOG DATA ASSIMILATION","text":"","category":"section"},{"location":"examples/lorenz63/#","page":"# Lorenz 63","title":"# Lorenz 63","text":"plot( xt.t, vcat(xt.u'...)[:,1], label=\"true state\") plot!( xt.t, vcat(x̂classical.u'...)[:,1], label=\"classical\") plot!( xt.t, vcat(x̂analog.u'...)[:,1], label=\"analog\") scatter!( yo.t, vcat(yo.u'...)[:,1]; markersize=2, label=\"observations\")","category":"page"},{"location":"examples/lorenz63/#The-results-show-that-performances-of-the-data-driven-analog-data-assimilation-are-closed-to-those-of-the-model-driven-data-assimilation.-The-error-can-be-reduced-by-augmenting-the-size-of-the-catalog-\"nb*loop*train\".-1","page":"# Lorenz 63","title":"The results show that performances of the data-driven analog data assimilation are closed to those of the model-driven data assimilation. The error can be reduced by augmenting the size of the catalog \"nblooptrain\".","text":"","category":"section"},{"location":"examples/lorenz63/##-Remark-1","page":"# Lorenz 63","title":"# Remark","text":"","category":"section"},{"location":"examples/lorenz63/#-7","page":"# Lorenz 63","title":"","text":"","category":"section"},{"location":"examples/lorenz63/#Note-that-for-all-the-previous-experiments,-we-use-the-robust-Ensemble-Kalman-Smoother-(EnKS)-with-the-increment-or-local-linear-regressions-and-the-Gaussian-sampling.-If-you-want-to-have-realistic-state-estimations,-we-preconize-the-use-of-the-Particle-Filter-(DA.method-'PF')-with-the-locally-constant-regression-(AF.regression-'locally_constant')-and-the-multinomial-sampler-(AF.sampling-'multinomial')-with-a-large-number-of-particles-(DA.N).-For-more-details-about-the-different-options,-see-the-attached-publication:-Lguensat,-R.,-Tandeo,-P.,-Ailliot,-P.,-Pulido,-M.,-and-Fablet,-R.-(2017).-The-Analog-Data-Assimilation.-*Monthly-Weather-Review*,-145(10),-4093-4107.-1","page":"# Lorenz 63","title":"Note that for all the previous experiments, we use the robust Ensemble Kalman Smoother (EnKS) with the increment or local linear regressions and the Gaussian sampling. If you want to have realistic state estimations, we preconize the use of the Particle Filter (DA.method = 'PF') with the locally constant regression (AF.regression = 'locally_constant') and the multinomial sampler (AF.sampling = 'multinomial') with a large number of particles (DA.N). For more details about the different options, see the attached publication: Lguensat, R., Tandeo, P., Ailliot, P., Pulido, M., & Fablet, R. (2017). The Analog Data Assimilation. Monthly Weather Review, 145(10), 4093-4107.","text":"","category":"section"},{"location":"examples/catalog/##-Catalog-1","page":"# Catalog","title":"# Catalog","text":"","category":"section"},{"location":"examples/catalog/#","page":"# Catalog","title":"# Catalog","text":"using Plots, NPSMC","category":"page"},{"location":"examples/catalog/#","page":"# Catalog","title":"# Catalog","text":"σ = 10.0 ρ = 28.0 β = 8.0/3","category":"page"},{"location":"examples/catalog/#","page":"# Catalog","title":"# Catalog","text":"dtintegration = 0.01 dtstates      = 1  dtobs         = 8  parameters     = [σ, ρ, β] varobs        = [1] nblooptrain  = 100 nblooptest   = 10 sigma2catalog = 0.0 sigma2obs     = 2.0","category":"page"},{"location":"examples/catalog/#","page":"# Catalog","title":"# Catalog","text":"ssm = StateSpaceModel( lorenz63,                         dtintegration, dtstates, dtobs,                         parameters, varobs,                        nblooptrain, nblooptest,                        sigma2catalog, sigma2obs )","category":"page"},{"location":"examples/catalog/#","page":"# Catalog","title":"# Catalog","text":"xt, yo, catalog = generate_data( ssm , [10.0;0.0;0.0]);","category":"page"},{"location":"examples/catalog/#","page":"# Catalog","title":"# Catalog","text":"plot(catalog.analogs[1,:]) plot!(catalog.analogs[2,:]) plot!(catalog.analogs[3,:])","category":"page"},{"location":"examples/catalog/#","page":"# Catalog","title":"# Catalog","text":"p = plot3d(1, xlim=(-25,25), ylim=(-25,25), zlim=(0,50),                 title = \"Lorenz 63\", marker = 1) for x in eachcol(catalog.analogs)     push!(p, x...) end p","category":"page"},{"location":"examples/lorenz96/##-Lorenz-96-1","page":"# Lorenz 96","title":"# Lorenz 96","text":"","category":"section"},{"location":"examples/lorenz96/#-1","page":"# Lorenz 96","title":"","text":"","category":"section"},{"location":"examples/lorenz96/#Data-assimilation-are-numerical-methods-used-in-geosciences-to-mix-the-information-of-observations-(noted-as-y)-and-a-dynamical-model-(noted-as-f)-in-order-to-estimate-the-true/hidden-state-of-the-system-(noted-as-x)-at-every-time-step-k.-Usually,-they-are-related-following-a-nonlinear-state-space-model:-1","page":"# Lorenz 96","title":"Data assimilation are numerical methods used in geosciences to mix the information of observations (noted as y) and a dynamical model (noted as f) in order to estimate the true/hidden state of the system (noted as x) at every time step k. Usually, they are related following a nonlinear state-space model:","text":"","category":"section"},{"location":"examples/lorenz96/#img-srchttps://tandeo.files.wordpress.com/2019/02/formule*nnss*model.png-width\"200\"-1","page":"# Lorenz 96","title":"<img src=https://tandeo.files.wordpress.com/2019/02/formulennssmodel.png width=\"200\">","text":"","category":"section"},{"location":"examples/lorenz96/#with-\\eta-and-\\epsilon-some-independant-white-Gaussian-noises-respectively-respresenting-the-model-forecast-error-and-the-error-of-observation.-1","page":"# Lorenz 96","title":"with eta and epsilon some independant white Gaussian noises respectively respresenting the model forecast error and the error of observation.","text":"","category":"section"},{"location":"examples/lorenz96/#-2","page":"# Lorenz 96","title":"","text":"","category":"section"},{"location":"examples/lorenz96/#In-classical-data-assimilation,-we-require-multiple-runs-of-an-explicit-dynamical-model-f-with-possible-severe-limitations-including-the-computational-cost,-the-lack-of-consistency-of-the-model-with-respect-to-the-observed-data-as-well-as-modeling-uncertainties.-Here,-an-alternative-strategy-is-explored-by-developing-a-fully-data-driven-assimilation.-No-explicit-knowledge-of-the-dynamical-model-is-required.-Only-a-representative-catalog-of-trajectories-of-the-system-is-assumed-to-be-available.-Based-on-this-catalog,-the-Analog-Data-Assimilation-(AnDA)-is-introduced-by-combining-machine-learning-with-the-analog-method-(or-nearest-neighbor-search)-and-stochastic-assimilation-techniques-including-Ensemble-Kalman-Filter-and-Smoother-(EnKF,-EnKS)-and-Particle-Filter-(PF).-We-test-the-accuracy-of-the-technic-on-chaotic-dynamical-models,-the-Lorenz-96-system.-1","page":"# Lorenz 96","title":"In classical data assimilation, we require multiple runs of an explicit dynamical model f with possible severe limitations including the computational cost, the lack of consistency of the model with respect to the observed data as well as modeling uncertainties. Here, an alternative strategy is explored by developing a fully data-driven assimilation. No explicit knowledge of the dynamical model is required. Only a representative catalog of trajectories of the system is assumed to be available. Based on this catalog, the Analog Data Assimilation (AnDA) is introduced by combining machine learning with the analog method (or nearest neighbor search) and stochastic assimilation techniques including Ensemble Kalman Filter and Smoother (EnKF, EnKS) and Particle Filter (PF). We test the accuracy of the technic on chaotic dynamical models, the Lorenz-96 system.","text":"","category":"section"},{"location":"examples/lorenz96/#-3","page":"# Lorenz 96","title":"","text":"","category":"section"},{"location":"examples/lorenz96/#This-Julia-program-is-dervied-from-the-Python-library-is-attached-to-the-following-publication:-1","page":"# Lorenz 96","title":"This Julia program is dervied from the Python library is attached to the following publication:","text":"","category":"section"},{"location":"examples/lorenz96/#Lguensat,-R.,-Tandeo,-P.,-Ailliot,-P.,-Pulido,-M.,-and-Fablet,-R.-(2017).-The-Analog-Data-Assimilation.-*Monthly-Weather-Review*,-145(10),-4093-4107.-1","page":"# Lorenz 96","title":"Lguensat, R., Tandeo, P., Ailliot, P., Pulido, M., & Fablet, R. (2017). The Analog Data Assimilation. Monthly Weather Review, 145(10), 4093-4107.","text":"","category":"section"},{"location":"examples/lorenz96/#If-you-use-this-library,-please-do-not-forget-to-cite-this-work.-1","page":"# Lorenz 96","title":"If you use this library, please do not forget to cite this work.","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"using Plots, NPSMC, DifferentialEquations, Random, LinearAlgebra","category":"page"},{"location":"examples/lorenz96/##-TEST-ON-LORENZ-96-1","page":"# Lorenz 96","title":"# TEST ON LORENZ-96","text":"","category":"section"},{"location":"examples/lorenz96/#-4","page":"# Lorenz 96","title":"","text":"","category":"section"},{"location":"examples/lorenz96/#We-also-test-the-analog-data-assimilation-procedure-on-the-40-dimensional-Lorenz-96-dynamical-model.-As-in-the-previous-experiment,-we-generate-state-and-observation-data-as-well-as-simulated-trajectories-of-the-Lorenz-96-model-in-order-to-emulate-the-dynamical-model.-Here,-we-compare-two-analog-data-assimilation-strategies:-the-global-and-local-analog-forecasting,-respectively-defined-in-finding-similar-situations-on-the-whole-40-variables-or-on-5-variables-recursively.-1","page":"# Lorenz 96","title":"We also test the analog data assimilation procedure on the 40-dimensional Lorenz-96 dynamical model. As in the previous experiment, we generate state and observation data as well as simulated trajectories of the Lorenz-96 model in order to emulate the dynamical model. Here, we compare two analog data assimilation strategies: the global and local analog forecasting, respectively defined in finding similar situations on the whole 40 variables or on 5 variables recursively.","text":"","category":"section"},{"location":"examples/lorenz96/#-5","page":"# Lorenz 96","title":"+","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"rng = MersenneTwister(123) F = 8 J = 40 :: Int64 parameters = [F, J] dtintegration = 0.05 # integration time dtstates = 1 # number of integration times between consecutive states (for xt and catalog) dtobs = 4 # number of integration times between consecutive observations (for yo) varobs = randperm(rng, J)[1:20] # indices of the observed variables nblooptrain = 100 # size of the catalog nblooptest = 10 # size of the true state and noisy observations sigma2catalog = 0.   # variance of the model error to generate the catalog    sigma2obs = 2. # variance of the observation error to generate observations","category":"page"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"ssm = StateSpaceModel( lorenz96,                         dtintegration, dtstates, dtobs,                         parameters, varobs,                        nblooptrain, nblooptest,                        sigma2catalog, sigma2obs )","category":"page"},{"location":"examples/lorenz96/#-6","page":"# Lorenz 96","title":"-","text":"","category":"section"},{"location":"examples/lorenz96/#time-steps-(to-be-in-the-attractor-space)-1","page":"# Lorenz 96","title":"5 time steps (to be in the attractor space)","text":"","category":"section"},{"location":"examples/lorenz96/#-7","page":"# Lorenz 96","title":"+","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"u0 = F .* ones(Float64, J) u0[J÷2] = u0[J÷2] + 0.01","category":"page"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"tspan = (0.0,5.0) p = [F, J] prob  = ODEProblem(lorenz96, u0, tspan, p) sol = solve(prob, reltol=1e-6, saveat= dt_integration) x1  = [x[1] for x in sol.u] x20 = [x[20] for x in sol.u] x40 = [x[40] for x in sol.u] plot(sol.t, x1) plot!(sol.t, x20) plot!(sol.t, x40)","category":"page"},{"location":"examples/lorenz96/#-8","page":"# Lorenz 96","title":"-","text":"","category":"section"},{"location":"examples/lorenz96/#run-the-data-generation-1","page":"# Lorenz 96","title":"run the data generation","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"xt, yo, catalog = generate_data(ssm, u0);","category":"page"},{"location":"examples/lorenz96/####-PLOT-STATE,-OBSERVATIONS-AND-CATALOG-1","page":"# Lorenz 96","title":"### PLOT STATE, OBSERVATIONS AND CATALOG","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"plot(xt.t,  vcat(xt.u'...)[:,1], line=(:solid,:red), label=\"x1\") scatter!(yo.t, vcat(yo.u'...)[:,1], markersize=2) plot!(xt.t, vcat(xt.u'...)[:,20],line=(:solid,:blue), label=\"x20\") scatter!(yo.t, vcat(yo.u'...)[:,20],markersize=2) plot!(xt.t, vcat(xt.u'...)[:,40],line=(:solid,:green), label=\"x40\") scatter!(yo.t, vcat(yo.u'...)[:,40],markersize=2) xlabel!(\"Lorenz-96 times\") title!(\"Lorenz-96 true (continuous lines) and observed trajectories (dots)\")","category":"page"},{"location":"examples/lorenz96/####-MODEL-DATA-ASSIMILATION-(with-the-global-analogs)-1","page":"# Lorenz 96","title":"### MODEL DATA ASSIMILATION (with the global analogs)","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"dataassimilation = DataAssimilation( ssm, xt ) @time x̂classicalglobal  = dataassimilation(yo, EnKS(500));","category":"page"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"RMSE(xt, x̂classicalglobal)","category":"page"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"localanalogmatrix =  BitArray{2}(diagm( -2  => trues(xt.nv-2),              -1  => trues(xt.nv-1),               0  => trues(xt.nv),               1  => trues(xt.nv-1),               2  => trues(xt.nv-2),                           J-2 => trues(xt.nv-(J-2)),              J-1 => trues(xt.nv-(J-1)))     + transpose(diagm( J-2 => trues(xt.nv-(J-2)),              J-1 => trues(xt.nv-(J-1))))     );","category":"page"},{"location":"examples/lorenz96/#-9","page":"# Lorenz 96","title":"-","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"heatmap(localanalogmatrix) ","category":"page"},{"location":"examples/lorenz96/#To-define-the-local-or-global-analog-forecasting,-we-generate-1","page":"# Lorenz 96","title":"To define the local or global analog forecasting, we generate","text":"","category":"section"},{"location":"examples/lorenz96/#different-matrices-that-will-be-use-as-the-\"AF.neighborhood\"-argument.-1","page":"# Lorenz 96","title":"different matrices that will be use as the \"AF.neighborhood\" argument.","text":"","category":"section"},{"location":"examples/lorenz96/#For-each-variable-of-the-system,-we-use-0-or-1-to-indicate-the-1","page":"# Lorenz 96","title":"For each variable of the system, we use 0 or 1 to indicate the","text":"","category":"section"},{"location":"examples/lorenz96/#absence-or-presence-of-other-variables-in-the-analog-forecasting-1","page":"# Lorenz 96","title":"absence or presence of other variables in the analog forecasting","text":"","category":"section"},{"location":"examples/lorenz96/#procedure.-For-instance,-in-the-local-analog-matrix-defined-above,-1","page":"# Lorenz 96","title":"procedure. For instance, in the local analog matrix defined above,","text":"","category":"section"},{"location":"examples/lorenz96/#to-predict-the-variable-x_2-at-time-tdt,-we-will-use-the-local-1","page":"# Lorenz 96","title":"to predict the variable x_2 at time t+dt, we will use the local","text":"","category":"section"},{"location":"examples/lorenz96/#variables-x_1,-x_2,-x_3,-x_4-and-x_{40}-at-time-t.-#-1","page":"# Lorenz 96","title":"variables x_1, x_2, x_3, x_4 and x_40 at time t.  # -","text":"","category":"section"},{"location":"examples/lorenz96/####-ANALOG-DATA-ASSIMILATION-(with-the-global-analogs)-1","page":"# Lorenz 96","title":"### ANALOG DATA ASSIMILATION (with the global analogs)","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"f  = AnalogForecasting( 100, xt, catalog,      regression = :local_linear, sampling = :gaussian)","category":"page"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"dataassimilation = DataAssimilation( f, xt, ssm.sigma2obs )","category":"page"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"@time x̂analogglobal  = dataassimilation(yo, EnKS(500)) RMSE(xt, x̂analog_global)","category":"page"},{"location":"examples/lorenz96/####-ANALOG-DATA-ASSIMILATION-(with-the-local-analogs)-1","page":"# Lorenz 96","title":"### ANALOG DATA ASSIMILATION (with the local analogs)","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"neighborhood = localanalogmatrix regression = :locallinear sampling   = :gaussian f  = AnalogForecasting( 100, xt, catalog, neighborhood, regression, sampling) dataassimilation = DataAssimilation( f, xt, ssm.sigma2obs ) @time x̂analoglocal  = dataassimilation(yo, EnKS(500)) RMSE(xt, x̂analoglocal)","category":"page"},{"location":"examples/lorenz96/####-COMPARISON-BETWEEN-GLOBAL-AND-LOCAL-ANALOG-DATA-ASSIMILATION-1","page":"# Lorenz 96","title":"### COMPARISON BETWEEN GLOBAL AND LOCAL ANALOG DATA ASSIMILATION","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"import PyPlot fig = PyPlot.figure(figsize=(10,10))","category":"page"},{"location":"examples/lorenz96/#plot-1","page":"# Lorenz 96","title":"plot","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"PyPlot.subplot(221) PyPlot.pcolormesh(hcat(xt.u...)) PyPlot.ylabel(\"Lorenz-96 times\") PyPlot.title(\"True trajectories\") PyPlot.subplot(222) PyPlot.pcolormesh(isnan.(hcat(yo.u...))) PyPlot.ylabel(\"Lorenz-96 times\") PyPlot.title(\"Observed trajectories\") PyPlot.subplot(223) PyPlot.pcolormesh(hcat(x̂analogglobal.u...)) PyPlot.ylabel(\"Lorenz-96 times\") PyPlot.title(\"Global analog data assimilation\") PyPlot.subplot(224) PyPlot.pcolormesh(hcat(x̂analoglocal.u...)) PyPlot.ylabel(\"Lorenz-96 times\") PyPlot.title(\"Local analog data assimilation\")","category":"page"},{"location":"examples/lorenz96/##-error-1","page":"# Lorenz 96","title":"# error","text":"","category":"section"},{"location":"examples/lorenz96/#","page":"# Lorenz 96","title":"# Lorenz 96","text":"println(\"RMSE(global analog DA) = RMSE(xt, x̂_analog_global)\") println(\"RMSE(local analog DA)  = RMSE(xt, x̂_analog_local)\")","category":"page"},{"location":"examples/lorenz96/#The-results-show-that-the-global-analog-strategy-do-not-reach-1","page":"# Lorenz 96","title":"The results show that the global analog strategy do not reach","text":"","category":"section"},{"location":"examples/lorenz96/#satisfying-results.-Indeed,-it-is-difficult-to-find-relevant-nearest-1","page":"# Lorenz 96","title":"satisfying results. Indeed, it is difficult to find relevant nearest","text":"","category":"section"},{"location":"examples/lorenz96/#neighboors-on-40-dimensional-vectors.-The-only-way-to-improve-the-1","page":"# Lorenz 96","title":"neighboors on 40-dimensional vectors. The only way to improve the","text":"","category":"section"},{"location":"examples/lorenz96/#results-in-such-a-global-strategy-is-to-deeply-increase-the-size-1","page":"# Lorenz 96","title":"results in such a global strategy is to deeply increase the size","text":"","category":"section"},{"location":"examples/lorenz96/#of-the-catalog.-At-the-contrary,-in-the-local-analog-data-assimilation,-1","page":"# Lorenz 96","title":"of the catalog. At the contrary, in the local analog data assimilation,","text":"","category":"section"},{"location":"examples/lorenz96/#we-are-able-to-track-correctly-the-true-trajectories,-even-with-a-1","page":"# Lorenz 96","title":"we are able to track correctly the true trajectories, even with a","text":"","category":"section"},{"location":"examples/lorenz96/#short-catalog.-1","page":"# Lorenz 96","title":"short catalog.","text":"","category":"section"},{"location":"examples/lorenz96/##-Remark-1","page":"# Lorenz 96","title":"# Remark","text":"","category":"section"},{"location":"examples/lorenz96/#-10","page":"# Lorenz 96","title":"","text":"","category":"section"},{"location":"examples/lorenz96/#Note-that-for-all-the-previous-experiments,-we-use-the-robust-1","page":"# Lorenz 96","title":"Note that for all the previous experiments, we use the robust","text":"","category":"section"},{"location":"examples/lorenz96/#Ensemble-Kalman-Smoother-(EnKS)-with-the-increment-or-local-linear-1","page":"# Lorenz 96","title":"Ensemble Kalman Smoother (EnKS) with the increment or local linear","text":"","category":"section"},{"location":"examples/lorenz96/#regressions-and-the-Gaussian-sampling.-If-you-want-to-have-realistic-1","page":"# Lorenz 96","title":"regressions and the Gaussian sampling. If you want to have realistic","text":"","category":"section"},{"location":"examples/lorenz96/#state-estimations,-we-preconize-the-use-of-the-Particle-Filter-1","page":"# Lorenz 96","title":"state estimations, we preconize the use of the Particle Filter","text":"","category":"section"},{"location":"examples/lorenz96/#(DA.method-'PF')-with-the-locally-constant-regression-(AF.regression-1","page":"# Lorenz 96","title":"(DA.method = 'PF') with the locally constant regression (AF.regression","text":"","category":"section"},{"location":"examples/lorenz96/#'locally_constant')-and-the-multinomial-sampler-(AF.sampling-1","page":"# Lorenz 96","title":"= 'locally_constant') and the multinomial sampler (AF.sampling =","text":"","category":"section"},{"location":"examples/lorenz96/#'multinomial')-with-a-large-number-of-particles-(DA.N).-For-more-1","page":"# Lorenz 96","title":"'multinomial') with a large number of particles (DA.N). For more","text":"","category":"section"},{"location":"examples/lorenz96/#details-about-the-different-options,-see-the-attached-publication:-1","page":"# Lorenz 96","title":"details about the different options, see the attached publication:","text":"","category":"section"},{"location":"examples/lorenz96/#Lguensat,-R.,-Tandeo,-P.,-Ailliot,-P.,-Pulido,-M.,-and-Fablet,-R.-1","page":"# Lorenz 96","title":"Lguensat, R., Tandeo, P., Ailliot, P., Pulido, M., & Fablet, R.","text":"","category":"section"},{"location":"examples/lorenz96/#(2017).-The-Analog-Data-Assimilation.-*Monthly-Weather-Review*,-1","page":"# Lorenz 96","title":"(2017). The Analog Data Assimilation. Monthly Weather Review,","text":"","category":"section"},{"location":"examples/lorenz96/#(10),-4093-4107.-#-1","page":"# Lorenz 96","title":"145(10), 4093-4107.  # -","text":"","category":"section"},{"location":"examples/ex_analog_forecasting/##-Analog-forecasting-1","page":"# Analog forecasting","title":"# Analog forecasting","text":"","category":"section"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"using Plots, DifferentialEquations, NPSMC","category":"page"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"σ = 10.0 ρ = 28.0 β = 8.0/3","category":"page"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"dtintegration = 0.01 dtstates      = 1  dtobs         = 8  varobs        = [1] nblooptrain  = 100  nblooptest   = 10 sigma2catalog = 0.0 sigma2obs     = 2.0","category":"page"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"ssm = StateSpaceModel( lorenz63,                        dtintegration, dtstates, dtobs,                         [σ, ρ, β], varobs,                        nblooptrain, nblooptest,                        sigma2catalog, sigma2obs )","category":"page"},{"location":"examples/ex_analog_forecasting/##-compute-u0-to-be-in-the-attractor-space-1","page":"# Analog forecasting","title":"# compute u0 to be in the attractor space","text":"","category":"section"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"u0    = [8.0;0.0;30.0] tspan = (0.0,5.0) prob  = ODEProblem(ssm.model, u0, tspan, ssm.params) u0    = last(solve(prob, reltol=1e-6, save_everystep=false))","category":"page"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"xt, yo, catalog = generate_data( ssm, u0 )","category":"page"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"af = AnalogForecasting( 50, xt, catalog;      regression = :local_linear, sampling = :multinomial )","category":"page"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"np = 100 dataassimilation = DataAssimilation( af, xt, ssm.sigma2obs) x̂ = data_assimilation(yo, EnKS(np)); println(RMSE(xt, x̂))","category":"page"},{"location":"examples/ex_analog_forecasting/#","page":"# Analog forecasting","title":"# Analog forecasting","text":"plot(xt.t, vcat(xt.u'...)[:,1], label=:true) plot!(xt.t, vcat(x̂.u'...)[:,1], label=:forecasted) scatter!(yo.t, vcat(yo.u'...)[:,1], markersize=2, label=:observed)","category":"page"},{"location":"examples/monte_carlo/##-Monte-Carlo-1","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"","category":"section"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"using DifferentialEquations using Distributions using LinearAlgebra using NPSMC using Plots","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"x0 = [8.0;0.0;30.0] tspan = (0.0,5.0) p = [10.0,28.0,8/3] prob = ODEProblem(lorenz63, x0, tspan, p) x0 = last(solve(prob, reltol=1e-6, save_everystep=false))'","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"np = 10 μ = [0.,0.,0.] σ = 1.0 .* Matrix(I, 3, 3) d = MvNormal( μ, σ) x = x0 .+ rand(d, np)'","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"dt = 1.0 tspan = (0.0, dt) x0    = [8.0;0.0;30.0]","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"prob  = ODEProblem( lorenz63, x0, tspan, p)","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"function prob_func( prob, i, repeat)     prob.u0 .= x[i,:]     prob end","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"monteprob = MonteCarloProblem(prob, probfunc=prob_func)","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"sim = solve(monte_prob, Tsit5(), trajectories=np)","category":"page"},{"location":"examples/monte_carlo/#","page":"# Monte-Carlo","title":"# Monte-Carlo","text":"plot(sim)","category":"page"},{"location":"catalog/#Catalog-1","page":"Catalog","title":"Catalog","text":"","category":"section"},{"location":"catalog/#","page":"Catalog","title":"Catalog","text":"Modules = [NPSMC]\nPages   = [\"catalog.jl\"]","category":"page"},{"location":"catalog/#NPSMC.Catalog","page":"Catalog","title":"NPSMC.Catalog","text":"Catalog( data, ssm)\n\nData type to store analogs and succesors observations from the Space State model\n\n\n\n\n\n","category":"type"},{"location":"#NPSMC.jl-1","page":"Home","title":"NPSMC.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"Documentation for NPSMC.jl","category":"page"},{"location":"time-series/#Time-Series-1","page":"Time Series","title":"Time Series","text":"","category":"section"},{"location":"time-series/#","page":"Time Series","title":"Time Series","text":"Modules = [NPSMC]\nPages   = [\"time_series.jl\"]","category":"page"}]
}
